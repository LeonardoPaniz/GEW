import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';
import { StorageService, User } from 'src/app/services/storage.service';
import { Subscription } from 'rxjs';
import { ActivatedRoute, Router } from '@angular/router';



@Component({
  selector: 'app-corpo',
  templateUrl: './corpo.component.html',
  styleUrls: ['./corpo.component.css'],
  providers: [StorageService],
})

export class CorpoComponent implements OnInit {
  cadastro!: FormGroup;
  submitted = false;

  hide = true
  disableSelect = new FormControl(false);

  private routeSub: Subscription;
  id: string;

  constructor(private fb: FormBuilder, private storageService: StorageService, private route: ActivatedRoute, private router: Router) {
    this.cadastroDados();

    this.routeSub = this.route.params.subscribe(params => {
      this.id = params['id'];
      console.log('ID DO EDIT----->', this.id);
      this.getById();
    });
    
    this.id = "";
  };

  ngOnInit(): void {
  }

  get cadastroFormControl(): any { return this.cadastro?.controls; }

  cadastroDados(res?: any) {
    this.cadastro = this.fb.group({
      nome: [!this.id ? '' : res.nome, Validators.required],
      email: [!this.id ? '' : res.email, Validators.required],
      senha: [!this.id ? '' : res.senha, Validators.required],
      telefone: [!this.id ? '' : res.telefone, Validators.required],
      cpf: [!this.id ? '' : res.cpf, Validators.required],
      nivel: [!this.id ? '' : res.nivel, Validators.required],
      ativo: [!this.id ? '' : res.ativo, Validators.required]
    });
  }

  getById() {
      if (this.id) {
        this.storageService.getUsersById(this.id).subscribe(res => {
          if (!res) {
            this.router.navigateByUrl('/**')
          } else {
            this.cadastroDados(res)
          }
        });
      }
    }
  

  sendForm() {
    if (!this.cadastro.valid) {
      this.disableSelect = new FormControl(false)
    }
  }

  verificando() {
    if (!this.id) {
      this.storageService.addUsers(this.cadastro.value).subscribe();
    }
    else {
      this.storageService.editUsers(this.id, this.cadastro.value).subscribe();
    }
  }

  post() {
    this.submitted = true;
    if (this.cadastro.valid) {
      this.verificando()
      alert("dados salvos meu chapa :)")
    } else {
      alert('falha no cadastro, verifique os dados!');
    }
  }
}